/*<---------------------------------------FIRST AND LAST OCCURRENCE------------------------------------>

Note : complxity is O(n) */

#include<iostream>
#include<vector>
using namespace std;

pair<int,int> firstAndLastOccurence(vector<int>& arr, int key) {
    int first = -1;
    int last = -1;
    
    for (int i = 0; i < arr.size(); i++) {
        if (arr[i] == key) {
            if (first == -1) {
                first = i;  // First occurrence found
            }
            last = i;  // Update last occurrence
        }
    }

    return {first, last};  // Return the pair, will be -1, -1 if not found
}

int main() {
    int size; 
    cout << "Enter the size of the array: "; 
    cin >> size; 
    
    vector<int> arr(size);
    cout << "Enter the elements of the array: "; 
    for (int i = 0; i < size; i++) {
        cin >> arr[i]; 
    }
    
    int key; 
    cout << "Enter the key element: "; 
    cin >> key; 
    
    pair<int,int> ans = firstAndLastOccurence(arr, key);
    
    if (ans.first == -1) {
        cout << "Element not found in the array." << endl;
    } else {
        cout << "First occurrence: " << ans.first << endl;
        cout << "Last occurrence: " << ans.second << endl;
    }
    
    return 0;
}
