// <---------Redundant bracket or not---------------->

#include<iostream>
#include<stack>
using namespace std;

bool findRedundantBracket(string &str){
	stack<char>s;
	for(int i=0;i<str.length();i++){
		char ch=str[i];
		
	    if(ch == '(' || ch == '+' || ch == '-' || ch =='/' || ch == '*'){
		   s.push(ch);	
     	}
	    else{
	        if(ch == ')'){
	        	bool isRedundant=true;
	          	while(s.top() != '(' ){
		        	char top=s.top();
			        if(top == '+' || top == '-' || top == '/' || top == '*'){
				        isRedundant=false;
			        }
			        s.pop();
		        } 
		        if(isRedundant == true){
			        return true;
		        }
		        s.pop();
		    }
	    }
    }
    return false;
}
	
int main(){
	string str="((b/c))";
	if(findRedundantBracket(str)){
		cout<<"Redundant bracket is exist."<<endl;
	}
	else{
		cout<<"Redundant bracket is not exist."<<endl;
	}
}
