// <-------------Kth ancenstor in a tree-------------->


#include<iostream>
#include<vector>
using namespace std;
class Node{
	public:
		int data;
    	Node* left;
    	Node* right;
	public:
		Node(int data){
			this->data=data;
			this->left=NULL;
			this->right=NULL;
		}
	
};

Node* buildTree(Node* root){
	cout<<"Enter the data:";
	int data;
	cin>>data;
	root=new Node(data);
	if(data == -1){
		return NULL;
	}
	
	cout<<"enter the left node of:"<<root->data<<endl;
	root->left=buildTree(root->left);
	cout<<"Enter the right node of:"<<root->data<<endl;
	root->right=buildTree(root->right);
	
	return root;
}


Node* solve(Node* root,int &k,int n){
	if(root == NULL){
		return NULL;
	}
	
	if(root->data == n){
		return root;
	}
	
	Node* leftAns=solve(root->left,k,n);
	Node* rightAns=solve(root->right,k,n);
	
	if(leftAns != NULL && rightAns == NULL){
		k--;
		if(k <= 0){
			k=INT_MAX;
			return root;
		}
		return leftAns;
	}
	if(leftAns == NULL && rightAns != NULL){
		k--;
		if(k <= 0){
			k=INT_MAX;
			return root;
		}
		return rightAns;
	}
}

// kth ancestor in tree
int KthAncestor(Node* root,int k,int n){
	Node* ans=solve(root,k,n);
	if(ans == NULL || ans->data == n){
		return -1;
	}
	else{
		return ans->data;
	}
	
}

int main(){
	Node* root=NULL;
	root=buildTree(root);
	
	
	int n;
	cout<<"Enter tha value of n:";
	cin>>n;
	
	cout<<"Enter the value of k:";
	int k;
	cin>>k; 
	
	int ans=KthAncestor(root,k,n);
	cout<<"kth ancestor is:"<<ans<<endl;		
}
