// <----------------------post order traversal----------------->

#include<iostream>
#include<queue>
using namespace std;
class Node{
	public:
		int data;
		Node* left;
		Node* right;
	public:
		Node(int data){
			this->data=data;
			this->left=NULL;
			this->right=NULL;
		}
};

// building tree
Node* buildBinaryTree(Node* root){
	
	// data for node
	cout<<"Enter the data:";
	int data;
	cin>>data;
	
	//creation of root with data
	root=new Node(data);
	
	// we dont want to insert element anymore in a node
	if(data==-1){
		return NULL;
	}
	
	// recursive call for left and right node
	cout<<"Enter the data for inserting in left of:"<<data<<endl;
	root->left=buildBinaryTree(root->left);
	
	cout<<"Enter the data for inserting in right of:"<<data<<endl;
	root->right=buildBinaryTree(root->right);
	
	return root;	
}

// in order traversal
void postOrderTraversal(Node* root){
	if(root == NULL){
		return ;
	}
	
	
	postOrderTraversal(root->left);
	postOrderTraversal(root->right);
	cout<<root->data<<" ";
}

// main function
int main(){
	// creation of root with NULL value
	Node* root=NULL;
	
	// creation of tree
	root=buildBinaryTree(root);
	
	// in order traversal
	cout<<"post oreder traversal is"<<endl;
	postOrderTraversal(root);
}
