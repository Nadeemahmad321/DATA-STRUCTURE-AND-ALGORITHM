/* <--------------------------sort 0s 1s 2s in linked list--------------------------->

approach (2) ->  time complexity is O(n) */


#include<iostream>
using namespace std;
class Node{
	public:
		int data;
		Node* next;
	
	public:
		Node(int data){
			this->data=data;
			this->next=NULL;
		}
};


void insertAtHead(Node* &tail,Node* &head,int data){
	if(head == NULL){
		Node* temp=new Node(data);
		head=temp;
		tail=temp;
	}
	else{
		Node* temp=new Node(data);
		temp->next=head;
		head=temp;
	}
}


void insertAtTail(Node* &tail,Node* &curr){
	
	tail->next=curr;
	tail=curr;
}
/* <------------------------sort 0s 1s and 2s----------------------------->*/
Node* sorting(Node* &head){
	
	if(head == NULL){
		return NULL;
	}
	
	Node* zeroHead=new Node(-1);
	Node* zeroTail=zeroHead;
	Node* oneHead=new Node(-1);
	Node* oneTail=oneHead;
	Node* twoHead=new Node(-1);
	Node* twoTail=twoHead;
	
	Node* curr=head;
	
	while(curr != NULL){
		int value=curr->data;
		
		if(value == 0){
			insertAtTail(zeroTail,curr);
		}
		else if(value == 1){
			insertAtTail(oneTail,curr);
		}
		else if(value == 2){
			insertAtTail(twoTail,curr);
		}
		curr=curr->next;
	}
	
	if(oneHead->next != NULL){
		zeroTail->next=oneHead->next;
	}
	else{
		zeroTail->next=twoHead->next;
	}
	oneTail->next=twoHead->next;
	twoTail->next=NULL;
	
	
	head=zeroHead->next;
	
	delete zeroHead;
	delete oneHead;
	delete twoHead;
	
	return head;
	
}
void print(Node* &head){
	Node* temp=head;
	while(temp != NULL){
		cout<<temp->data<<" ";
		temp=temp->next;
	}
	cout<<endl;
}


int main(){
	Node* head=NULL;
	Node* tail=NULL;
	
	insertAtHead(tail,head,2);
	cout<<"inserting node at head:";
	print(head);
	
	insertAtHead(tail,head,0);
	cout<<"inserting node at head:";
	print(head);
	
	insertAtHead(tail,head,2);
	cout<<"inserting node at head:";
	print(head);
	
	
	insertAtHead(tail,head,1);
	cout<<"inserting node at head:";
	print(head);
	
	insertAtHead(tail,head,1);
	cout<<"inserting node at head:";
	print(head);
	
	
	insertAtHead(tail,head,2);
	cout<<"inserting node at head:";
	print(head);
	
	insertAtHead(tail,head,0);
	cout<<"inserting node at head:";
	print(head);
	
	// sort 0 1 2 in linked list
	sorting(head);
	cout<<"after sorting linked list is:"<<endl;
	print(head);
}
