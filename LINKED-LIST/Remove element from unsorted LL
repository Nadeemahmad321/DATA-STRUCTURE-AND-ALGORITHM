/* <--------------------remove duplicate from unsorted linked list------------------->*/


#include<iostream>
#include<map>
using namespace std;
class Node{
	public:
		int data;
		Node* next;
	
	public:
		Node(int data){
			this->data=data;
			this->next=NULL;
		}
};


void insertAtHead(Node* &tail,Node* &head,int data){
	if(head == NULL){
		Node* temp=new Node(data);
		head=temp;
		tail=temp;
	}
	else{
		Node* temp=new Node(data);
		temp->next=head;
		head=temp;
	}
}

// <------------------remove duplicate from unsorted linked list------------------>
Node* removeDuplicateFromUnSortedLL(Node *head)
        {
            Node *curr = head;
            Node *prev = NULL;

            if (curr == NULL)
                return NULL;

            map<int,bool> visited;

            while (curr != NULL)
            {

                if(visited[curr->data] == true)
                {
                    Node *temp = curr;
                    curr = curr->next;
                    delete (temp);
                    prev->next = curr;
                }
                else
                {
                    visited[curr->data] = true;
                    prev = curr;
                    curr = curr->next;
                }
            }
            return head;
        }


void print(Node* &head){
	Node* temp=head;
	while(temp != NULL){
		cout<<temp->data<<" ";
		temp=temp->next;
		
	}
	cout<<endl;
}

int main(){
	Node* head=NULL;
	Node* tail=NULL;
	
	insertAtHead(tail,head,3);
	cout<<"inserting at head:";
	print(head);
	
	insertAtHead(tail,head,3);
	cout<<"inserting at head:";
	print(head);
	
	insertAtHead(tail,head,2);
	cout<<"inserting at head:";
	print(head);
	
	insertAtHead(tail,head,2);
	cout<<"inserting at head:";
	print(head);
	
	insertAtHead(tail,head,1);
	cout<<"inserting at head:";
	print(head);
	
	// remove duplicate from Unsorted linked list
	removeDuplicateFromUnSortedLL(head);
	print(head);

}
